// This file has been autogenerated from a class added in the UI designer.

using System;
using Firebase.Auth;
using FirebaseGAuth.iOS.Helpers;
using FirebaseGAuth.iOS.Services;
using Foundation;
using UIKit;
using Xamarin.Auth;

namespace FirebaseGAuth.iOS
{
	public partial class WelcomeView : UIViewController
	{
        Auth auth;
        OAuth2Authenticator oAuth2;

        public WelcomeView (IntPtr handle) : base (handle) { }

        public override void ViewDidLoad()
        {
            auth = Auth.DefaultInstance;

            UITapGestureRecognizer gestureRecognizer = new UITapGestureRecognizer(GoogleLogin);
            gestureRecognizer.NumberOfTapsRequired = 1;
            vwGoogleLogin.AddGestureRecognizer(gestureRecognizer);
        }

        private void GoogleLogin()
        {
            oAuth2 = OAuthenticationService.CreateOAuth2(OAuth2ProviderType.GOOGLE);
            oAuth2.Completed += OAuth2_Completed;
            oAuth2.Error += OAuth2_Error;
            var view = oAuth2.GetUI();
            PresentViewController(view, true, null);
        }

        private void OAuth2_Error(object sender, AuthenticatorErrorEventArgs e)
        {
            // If authentication fails
            OAuth2Authenticator oAuth = (OAuth2Authenticator)sender;
            if (oAuth != null)
            {
                oAuth2.Completed -= OAuth2_Completed;
                oAuth2.Error -= OAuth2_Error;
            }
            DismissViewController(true, null);
        }

        private void OAuth2_Completed(object sender, AuthenticatorCompletedEventArgs e)
        {
            if (e.IsAuthenticated)
            {
                var account = e.Account;
                var accessToken = account.Properties["access_token"];

                var idToken = account.Properties["id_token"];
                var credential = GoogleAuthProvider.GetCredential(idToken, accessToken);
                Auth.DefaultInstance.SignInWithCredential(credential, actionHandler);
            }
            DismissViewController(true, null);
        }

        private void actionHandler(AuthDataResult authResult, NSError error)
        {
            if (error != null)
            {
                return;
            }
            else
            {
                if (authResult != null && authResult.User != null) 
                {
                    var user = new Model.User();
                    user.Uid = authResult.User.Uid;
                    user.DisplayName = authResult.User.DisplayName;
                    user.PhoneNumber = authResult.User.PhoneNumber;
                    user.Email = authResult.User.Email;
                    user.PhotoUrl = authResult.User.PhotoUrl;
                    user.ProviderId = authResult.User.ProviderId;
                    user.IsEmailVerified = authResult.User.IsEmailVerified;

                    Settings.FirebaseLoggedInUser = user;
                }
                NavigateToView();
            }
        }

        private void NavigateToView()
        {
            var profileView = Storyboard.InstantiateViewController(nameof(ProfileView)) as ProfileView;
            if (profileView != null)
            {
                NavigationController.PushViewController(profileView, false);
            }
        }
    }
}
